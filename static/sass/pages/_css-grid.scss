@mixin grid($type: grid, $columns: auto, $rows: auto, $gap: 0 0, $justify: stretch, $align: stretch, $justify-content: start, $align-content: start, $auto-columns: 0, $auto-rows: 0) {
  align-items: $align;
  display: $type;
  grid-auto-columns: $auto-columns;
  grid-auto-rows: $auto-rows;
  grid-gap: $gap;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  justify-content: $justify-content;
  justify-items: $justify;
}

@mixin grid-areas($areas) {
  grid-template-areas: $areas;
}

@mixin grid-column-item($columns-start, $column-end, $row-start, $row-end) {
  grid-column: $columns-start / $column-end;
  grid-row: $row-start / $row-end;
}

@mixin grid-align-item($type: justify, $value: stretch) {
  #{$type}-self: $value;
}

@mixin grid-area-item($area) {
  grid-area: $area;
}

.css-grid-container {
  @include grid(grid, repeat(3, 1fr), repeat(3, 1fr), 5px, stretch, stretch, stretch, stretch, 0, 0);
  @include grid-areas(
    'header header header'
    'sidebar-one main sidebar-two'
    'footer footer footer'
  );

  > div {
    color: $white;
    font-size: 20px;
    text-align: center;
  }

  @for $i from 1 through 12 {
    .item-#{$i} {
      $bg-red: random(256) - 1;
      $bg-green: random(256) - 1;
      $bg-blue: random(256) - 1;
      $bg: rgb($bg-red, $bg-green, $bg-blue);

      background-color: $bg;
    }
  }

  .item-1 {
    @include grid-align-item(justify, stretch);
    @include grid-align-item(align, stretch);
  }
}
